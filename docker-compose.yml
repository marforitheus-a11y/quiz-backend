services:
  redis:
    image: redis:7
    command: ["redis-server", "--save", "60", "1"]
    volumes:
      - redisdata:/data
    networks:
      - ai-net

  faiss:
    build: .
    command: ["python", "faiss_service.py"]
    volumes:
      - faiss_data:/data
    environment:
      - FAISS_INDEX_PATH=/data/faiss/index.faiss
      - FAISS_META_PATH=/data/faiss/meta.json
    ports:
      - "8003:8003"
    networks:
      - ai-net

  api:
    build: .
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    dns: 8.8.8.8
    depends_on:
      - redis
      - faiss
    volumes:
      - faiss_data:/data
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_API_URL=${GEMINI_API_URL}
      - PROJECT_CLONE_PATH=${PROJECT_CLONE_PATH}
      - UPLOADS_PATH=${UPLOADS_PATH}
      - PROMPTS_LOG=${PROMPTS_LOG}
      - GITHUB_HOST=${GITHUB_HOST}
      - REPO_NAME=${REPO_NAME}
      - FRONTEND_REPO_NAME=${FRONTEND_REPO_NAME}
    ports:
      - "8000:8000"
    networks:
      - ai-net

  worker:
    build: .
    command: ["celery", "-A", "worker", "worker", "--loglevel=info", "-Q", "default"]
    dns: 8.8.8.8
    depends_on:
      - redis
      - faiss
    volumes:
      - faiss_data:/data
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_API_URL=${GEMINI_API_URL}
      - PROMPTS_LOG=${PROMPTS_LOG}
      - UPLOADS_PATH=${UPLOADS_PATH}
      - FAISS_INDEX_PATH=${FAISS_INDEX_PATH}
      - FAISS_META_PATH=${FAISS_META_PATH}
      - FRONTEND_REPO_NAME=${FRONTEND_REPO_NAME}
    networks:
      - ai-net

volumes:
  redisdata:
  faiss_data:

networks:
  ai-net:
    driver: bridge