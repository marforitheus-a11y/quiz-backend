const axios = require('axios');

const API_URL = 'https://quiz-api-z4ri.onrender.com';

async function createAdminUser() {
    console.log('üë§ Criando usu√°rio admin...\n');
    
    // 1. Tentar criar usu√°rio via signup com campos completos
    try {
        console.log('üìù Tentando signup com campos completos...');
        
        const signupData = {
            name: 'Administrador',
            username: 'admin',
            email: 'admin@quiz.com',
            password: 'admin123',
            consents: {
                essential: true,
                termsAccepted: true,
                privacyPolicyAccepted: true,
                performanceAnalysis: false,
                personalization: false,
                marketingEmails: false,
                analyticsCookies: false
            },
            gdprCompliance: {
                ipAddress: '127.0.0.1',
                userAgent: 'Test Script',
                timestamp: new Date().toISOString()
            }
        };
        
        const signupResponse = await axios.post(`${API_URL}/signup`, signupData);
        console.log('‚úÖ Signup realizado com sucesso!');
        console.log('üìä Response:', signupResponse.data);
        
        // Agora tentar fazer login
        console.log('\nüîê Tentando login com credenciais criadas...');
        const loginResponse = await axios.post(`${API_URL}/login`, {
            email: 'admin@quiz.com',
            password: 'admin123'
        });
        
        console.log('‚úÖ Login funcionou!');
        console.log('üé´ Token recebido:', !!loginResponse.data.token);
        console.log('üë§ User data:', loginResponse.data.user);
        
        return loginResponse.data.token;
        
    } catch (signupError) {
        console.log('‚ùå Erro no signup:', signupError.response?.status, signupError.response?.data);
        
        // Talvez o usu√°rio j√° existe, tentar login direto
        console.log('\nüîÑ Tentando login direto (usu√°rio pode j√° existir)...');
        
        try {
            const loginResponse = await axios.post(`${API_URL}/login`, {
                email: 'admin@quiz.com',
                password: 'admin123'
            });
            
            console.log('‚úÖ Login direto funcionou!');
            return loginResponse.data.token;
            
        } catch (loginError) {
            console.log('‚ùå Login direto tamb√©m falhou:', loginError.response?.status, loginError.response?.data);
        }
    }
    
    // 2. Tentar com outras varia√ß√µes de dados
    const variations = [
        { 
            name: 'Admin', 
            username: 'administrador', 
            email: 'administrador@quiz.com', 
            password: 'admin123',
            consents: {
                essential: true,
                termsAccepted: true,
                privacyPolicyAccepted: true,
                performanceAnalysis: false,
                personalization: false,
                marketingEmails: false,
                analyticsCookies: false
            }
        },
        { 
            name: 'Test Admin', 
            username: 'testadmin', 
            email: 'test@admin.com', 
            password: 'test123',
            consents: {
                essential: true,
                termsAccepted: true,
                privacyPolicyAccepted: true,
                performanceAnalysis: false,
                personalization: false,
                marketingEmails: false,
                analyticsCookies: false
            }
        }
    ];
    
    for (const variation of variations) {
        try {
            console.log(`\nüìù Tentando criar: ${variation.email}`);
            await axios.post(`${API_URL}/signup`, variation);
            
            console.log('‚úÖ Usu√°rio criado! Tentando login...');
            const loginResponse = await axios.post(`${API_URL}/login`, {
                email: variation.email,
                password: variation.password
            });
            
            console.log('‚úÖ Login funcionou com esta varia√ß√£o!');
            return loginResponse.data.token;
            
        } catch (error) {
            console.log(`‚ùå Falhou para ${variation.email}:`, error.response?.status);
        }
    }
    
    return null;
}

async function main() {
    const token = await createAdminUser();
    
    if (token) {
        console.log('\nüéâ Sucesso! Agora testando funcionalidades...');
        
        // Testar endpoint protegido
        try {
            const metricsResponse = await axios.get(`${API_URL}/api/admin/metrics`, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log('‚úÖ M√©tricas funcionaram:', metricsResponse.data);
            
        } catch (error) {
            console.log('‚ùå Erro nas m√©tricas:', error.response?.status, error.response?.data);
        }
        
    } else {
        console.log('\nüí° Nenhuma credencial funcionou. Poss√≠veis causas:');
        console.log('   - O banco de dados est√° vazio');
        console.log('   - As corre√ß√µes n√£o foram aplicadas no deploy');
        console.log('   - H√° um problema na valida√ß√£o de campos');
    }
}

main();