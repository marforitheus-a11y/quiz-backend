const axios = require('axios');

const API_URL = 'https://quiz-api-z4ri.onrender.com';

async function testCorrectBackend() {
    console.log('üîç Testando backend correto em:', API_URL);
    console.log('');
    
    try {
        // 1. Verificar se o servidor est√° online
        console.log('üåê Verificando se o servidor est√° online...');
        const healthCheck = await axios.get(`${API_URL}/health`);
        console.log('‚úÖ Servidor online!', healthCheck.data);
        console.log('');
        
        // 2. Tentar fazer login com credenciais v√°lidas
        console.log('üîê Testando login...');
        
        // Teste com credenciais de admin
        try {
            const adminLogin = await axios.post(`${API_URL}/login`, {
                email: 'admin@quiz.com',
                password: 'admin123'
            });
            
            console.log('‚úÖ Login admin funcionou!');
            const token = adminLogin.data.token;
            
            // 3. Testar endpoint protegido com token
            console.log('üîí Testando endpoint protegido...');
            const protectedTest = await axios.get(`${API_URL}/api/admin/metrics`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            
            console.log('‚úÖ Endpoint protegido funcionou!');
            console.log('üìä M√©tricas:', {
                totalUsers: protectedTest.data.totalUsers,
                hasData: !!protectedTest.data
            });
            
        } catch (loginError) {
            console.log('‚ùå Erro no login admin:', loginError.response?.status, loginError.response?.data);
        }
        
        // 4. Testar login com usu√°rio normal (se existir)
        console.log('');
        console.log('üë§ Testando login de usu√°rio normal...');
        try {
            const userLogin = await axios.post(`${API_URL}/login`, {
                email: 'user@test.com',
                password: 'test123'
            });
            
            console.log('‚úÖ Login de usu√°rio normal funcionou!');
            
        } catch (userError) {
            console.log('‚ÑπÔ∏è Usu√°rio normal n√£o existe ou credenciais inv√°lidas:', userError.response?.status);
        }
        
        // 5. Testar endpoint de temas (que apareceu no erro)
        console.log('');
        console.log('üé® Testando endpoint de temas...');
        try {
            const themesTest = await axios.get(`${API_URL}/quiz/themes`);
            console.log('‚úÖ Endpoint de temas funcionou!');
            console.log('üìù Temas encontrados:', themesTest.data?.length || 0);
            
        } catch (themesError) {
            console.log('‚ùå Erro no endpoint de temas:', themesError.response?.status, themesError.response?.data);
        }
        
    } catch (error) {
        console.error('‚ùå Erro geral:', error.message);
    }
}

testCorrectBackend();